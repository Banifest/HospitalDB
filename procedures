CREATE PROCEDURE [dbo].[get_current_state_health]
    @login    NVARCHAR(50),
    @password NVARCHAR(50)
AS
  DECLARE param_cursor CURSOR LOCAL READ_ONLY FOR
    SELECT
      Examinations.name,
      Examinations.param
    FROM Patients, Examinations, Users
    WHERE Users.nick = @login AND Users.password = @password
          AND Patients.user_id = Users.id AND Examinations.patient_id = Patients.id
    ORDER BY Examinations.check_date DESC;

  CREATE TABLE #tmp (
    name NVARCHAR(50),
    par  NVARCHAR(50),
    val  NVARCHAR(50)
  );
  DECLARE @params XML;
  DECLARE @name NVARCHAR(50);

  OPEN param_cursor;

  FETCH NEXT FROM param_cursor
  INTO @name, @params;

  WHILE @@FETCH_STATUS = 0
    BEGIN

      DECLARE temp_cursor CURSOR LOCAL READ_ONLY FOR
        SELECT
          @name,
          Tbl.Col.value('name[1]', 'nvarchar(50)')  AS name,
          Tbl.Col.value('value[1]', 'nvarchar(50)') AS value
        FROM @params.nodes('//row') Tbl(Col);

      OPEN temp_cursor;


      DECLARE @exm_name NVARCHAR(50);
      DECLARE @exm_par NVARCHAR(50);
      DECLARE @exm_val NVARCHAR(50);

      FETCH NEXT FROM temp_cursor
      INTO @exm_name, @exm_par, @exm_val;

      WHILE @@FETCH_STATUS = 0
        BEGIN
          INSERT INTO #tmp SELECT
                             @exm_name,
                             @exm_par,
                             @exm_val
                           WHERE NOT EXISTS(SELECT TOP (1) *
                                            FROM #tmp
                                            WHERE #tmp.name = @exm_name AND #tmp.par = @exm_par)

          FETCH NEXT FROM temp_cursor
          INTO @exm_name, @exm_par, @exm_val;
        END;
      CLOSE temp_cursor;
      DEALLOCATE temp_cursor;

      FETCH NEXT FROM param_cursor
      INTO @name, @params;
    END;

  SELECT *
  FROM #tmp;

  DROP TABLE #tmp;